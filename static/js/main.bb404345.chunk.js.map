{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/seach-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","onChangeHandler","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","res","json","catch","err","console","error","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAG,kBAAaL,EAAMG,QAAQC,MAC7F,6BACKJ,EAAMG,QAAQG,OAEnB,4BACKN,EAAMG,QAAQI,aCPlBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAE,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJ/CO,G,MAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBACrC,OAAO,uBACKZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCXG,G,wDAlCb,aAAe,IAAD,8BACZ,gBAcFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAc,IAJJ,E,gEAQO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GAAG,OAAE,EAAKP,SAAS,CAACV,SAASiB,OAClCE,OAAM,SAAAC,GAAG,OAAEC,QAAQC,MAAMF,Q,+BAOlB,IAAD,EACyBG,KAAKT,MAA9Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACjB,OACE,sBAAKnB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,gBAAiBmB,KAAKf,eAExB,cAAC,EAAD,CAAUR,SAAUA,EAASwB,QAAO,SAAA9B,GAAO,OAAEA,EAAQG,KAAK4B,cAAcC,SAASf,EAAYc,2B,GA7BnFE,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bb404345.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    return (\n        <div className='card'>\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt={`monster ${props.monster.id}`}/>\n            <h1>\n                {props.monster.name}\n            </h1>\n            <p>\n                {props.monster.email}\n            </p>\n        </div>\n    )\n}","import React from 'react';\nimport './card-list.styles.css'\nimport { Card } from '../card/card.component'\n\nexport const CardList = (props) => {\n    return (\n        <div className='card-list'>\n            {props.monsters.map(monster=><Card key={monster.id} monster={monster}/>)}\n        </div>\n    )\n}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, onChangeHandler }) => {\n    return <input \n                className='search'\n                type='search'\n                placeholder={placeholder}\n                onChange={onChangeHandler} \n            />\n    }","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/seach-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res=>res.json())\n    .then(res=>this.setState({monsters:res}))\n    .catch(err=>console.error(err))\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value})\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder='search monsters'\n          onChangeHandler={this.handleChange} \n        />\n        <CardList monsters={monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}